[{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Changelog","title":"Changelog","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":[]},{"path":[]},{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":"changed","dir":"","previous_headings":"v0.3.0 - 2025-02-21","what":"Changed","title":"Changelog","text":"BREAKING CHANGES Changed providers_id, parameters_id, owner_contacts_id, manufacturers_id, licenses_id, instruments_id, countries_id function arguments numeric vectors Changed coordinates function argument named numeric vector fields latitude longitude Changed bbox function argument named numeric vector fields xmin, ymin, xmax ymax.","code":""},{"path":[]},{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":"added","dir":"","previous_headings":"v0.2.0 - 2025-02-03","what":"Added","title":"Changelog","text":"Added missing DRY_RUN checks resource functions. deep_get function handling nullable fields .data.frame methods. Rate limit headers added “headers” property list. Updated User-Agent include package version.","code":""},{"path":[]},{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":"added-1","dir":"","previous_headings":"v0.1.2 - 2025-01-25","what":"Added","title":"Changelog","text":"Additional null check possible null value summary standard deviation field. Resolved #4","code":""},{"path":[]},{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":"added-2","dir":"","previous_headings":"v0.1.1 - 2025-01-24","what":"Added","title":"Changelog","text":"Fix null check parameters_list..data.frame catch null values results object. dry_run check licenses resource functions","code":""},{"path":"https://openaq.github.io/openaq-r/CHANGELOG.html","id":"v010---2025-01-23","dir":"","previous_headings":"","what":"v0.1.0 - 2025-01-23","title":"Changelog","text":"Initial release","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to the OpenAQ R client","title":"Contributing to the OpenAQ R client","text":"welcome contributions OpenAQ R client! ’s guide contribute effectively:","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to the OpenAQ R client","text":"Please review adhere Code Conduct: https://github.com/openaq/.github/blob/main/CODE_OF_CONDUCT.md]","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"reporting-issues-and-questions","dir":"","previous_headings":"","what":"Reporting Issues and Questions","title":"Contributing to the OpenAQ R client","text":"Search Existing Issues: creating new issue, search existing issues see problem already reported. Bug Report: Clearly describe bug, including steps reproduce . Feature Request: Explain desired feature benefits.","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"for-general-questions","dir":"","previous_headings":"Reporting Issues and Questions","what":"For General Questions","title":"Contributing to the OpenAQ R client","text":"issue tracker primarily reporting bugs requesting features. general questions, discussions, seeking help, please visit project discussions: https://github.com/openaq/openaq-r/discussions","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"submitting-pull-requests","dir":"","previous_headings":"","what":"Submitting Pull Requests","title":"Contributing to the OpenAQ R client","text":"Fork OpenAQ R client repository GitHub account. Create new branch feature bug fix. Make changes commit clear, concise commit messages. Push branch forked repository. Create pull request branch main repository. Ensure pull request linked existing issue. (Pull requests must linked existing issue.)","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"pull-request-guidelines","dir":"","previous_headings":"Submitting Pull Requests","what":"Pull Request Guidelines","title":"Contributing to the OpenAQ R client","text":"Adhere Coding Standards: Follow existing coding style conventions. Write Clear Commit Messages: Use clear concise commit messages describe changes made. Add Tests: Write unit tests cover changes. Document Changes: Update documentation necessary. Patient Respectful: patient respectful contributors.","code":""},{"path":"https://openaq.github.io/openaq-r/CONTRIBUTING.html","id":"additional-tips","dir":"","previous_headings":"","what":"Additional Tips","title":"Contributing to the OpenAQ R client","text":"Start Small: ’re new open source, start small contributions like fixing typos improving documentation. Ask Questions: Feel free ask questions project discussions forum. Proactive: proactive addressing feedback making improvements pull request. following guidelines, can help make OpenAQ R client even better!","code":""},{"path":"https://openaq.github.io/openaq-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 OpenAQ Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://openaq.github.io/openaq-r/articles/geospatial-queries.html","id":"point-and-radius","dir":"Articles","previous_headings":"","what":"Point and Radius","title":"geospatial-queries","text":"list_location() function allows search locations near given point. provide latitude longitude center point, well radius within search. radius specified meters, maximum value 25,000 (25 kilometers). example, searching locations within 10 kilometer radius specified latitude longitude. result list locations fall within circular area.","code":"list_location(   coordinates = c(latitude = -73.0666, longitude = -36.7724), # the coordinates in Concepción, Chile.   radius = 10000 # 10,000 meters or 10 kilometers )"},{"path":"https://openaq.github.io/openaq-r/articles/geospatial-queries.html","id":"bounding-box","dir":"Articles","previous_headings":"","what":"Bounding box","title":"geospatial-queries","text":"queries covering rectangular area, can use list_locations() function bbox argument. need provide minimum maximum longitude (xmin, xmax) latitude (ymin, ymax) values define corners bounding box. query return locations within defined rectangular region.  map visually represents bounding box used example query.","code":"list_locations(   bbox = c(     xmin = -8.478184,     ymin = 26.640174,     xmax = 50.803066,     ymax = 46.534067   ) )"},{"path":"https://openaq.github.io/openaq-r/articles/geospatial-queries.html","id":"computing-a-bounding-box-from-a-polygon","dir":"Articles","previous_headings":"Bounding box","what":"Computing a bounding box from a polygon","title":"geospatial-queries","text":"Often, ’ll want query data within specific geographic area defined polygon, rather simple rectangle. Real-world boundaries often complex shapes. instance, consider boundary city Los Angeles, complex, irregular shape.  can use sf package read GeoJSON data representing city boundary. derive bounding box polygon, can use sf::st_bbox() method. function calculates minimum maximum x y coordinates polygon, effectively creating bounding box encompasses entire shape. output named numeric vector, perfectly formatted bbox parameter openaq function. output gives xmin, ymin, xmax, ymax values needed openaq query.  map shows Los Angeles city boundary along calculated bounding box. Now, can directly use bbox object generated sf::st_bbox() list_locations() call. retrieve air quality data within bounding box encompasses city Los Angeles. detailed explanation OpenAQ API works methods, see official OpenAQ API documentation https://docs.openaq.org/using--api/geospatial. documentation provides information available parameters optimize geospatial queries.","code":"url <- \"https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/7/query?outFields=*&where=1%3D1&f=geojson\" la <- sf::st_read(url) #> Reading layer `OGRGeoJSON' from data source  #>   `https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/7/query?outFields=*&where=1%3D1&f=geojson'  #>   using driver `GeoJSON' #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -118.6682 ymin: 33.70366 xmax: -118.1554 ymax: 34.33731 #> Geodetic CRS:  WGS 84 plot(la[\"OBJECTID\"]) bbox <- sf::st_bbox(la) bbox #>       xmin       ymin       xmax       ymax  #> -118.66819   33.70366 -118.15537   34.33731 plot(sf::st_as_sfc(bbox)) bbox <- sf::st_bbox(la) plot(la[\"OBJECTID\"], add = TRUE) list_locations(   bbox = c(xmin = 100.052893, ymin = 13.495250, xmax = 101.041662, ymax = 13.974828) )"},{"path":[]},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"api-key","dir":"Articles","previous_headings":"Key concepts","what":"API Key","title":"Introduction to openaq","text":"API key required using OpenAQ API. Register account https://explore.openaq.org/register get API key. default OpenAQ R client looks API key OPENAQ_API_KEY system environment variable. package also provides helper function called set_api_key() set value. Alternatively, API key can set individual resource function calls e.g. Setting API key individual function level always take precedent API key set environment variable level e.g. ","code":"set_api_key(\"my-super-secret-openaq-key-1234\") list_locations(api_key = \"my-super-secret-openaq-key-1234\") set_api_key(\"my-super-secret-openaq-key-1234\") list_locations(api_key = \"this-is-my-alternate-api-key\")"},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"rate-limits","dir":"Articles","previous_headings":"Key concepts","what":"Rate limits","title":"Introduction to openaq","text":"OpenAQ limits number API requests can make set time ensure fair access users prevent overuse. OpenAQ API provides custom rate limit headers indicate number requests used, number remaining, rate limit allowance, number seconds remaining current period reset. headers preserved default openaq package object attributes output data frame: x_ratelimit_used x_ratelimit_remaining x_ratelimit_limit x_ratelimit_reset Read headers rate limits OpenAQ API documentation Rate Limits openaq package provides optional functionality automatically throttle requests rate limit reached.","code":"locations <- list_locations(   limit = 1000,   parameters_id = 2,   providers_id = 166 ) headers <- attr(locations, \"headers\") print(headers[[\"x_ratelimit_remaining\"]])  # > 59"},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"pagination","dir":"Articles","previous_headings":"Key concepts","what":"Pagination","title":"Introduction to openaq","text":"OpenAQ API uses pagination provide access large amounts data “pages”. number results controlled limit parameter defaults 100 can configured 1000 results. query results page limit can page results using page parameter. limit = 1000 page=1 contain results 1-1000, page=2 contain results 1001-2000 . page limit available resource returns results, .e. “list” functions list_locations(), list_licenses() list_sensor_measurements() Examples:","code":"list_locations(   limit = 1000,   page = 1 ) list_locations(   limit = 1000,   page = 2 )"},{"path":[]},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"data-frames","dir":"Articles","previous_headings":"Features","what":"Data frames","title":"Introduction to openaq","text":"resource functions return typed data frame default. prefer work JSON parsed standard list can toggle data frame parsing as_data_frame function parameter. .data.frame methods provided resource classes well. JSON results parsed httr2::resp_body_json() function --hood.","code":"list_locations(   limit = 1000,   parameters_id = 2,   providers_id = 166,   as_data_frame = FALSE )  #> list() #> attr(,\"meta\") #> attr(,\"meta\")$name #> [1] \"openaq-api\" #> #> attr(,\"meta\")$website #> [1] \"/\" #> #> attr(,\"meta\")$page #> [1] 1 #> ..."},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"automatic-rate-limiting","dir":"Articles","previous_headings":"Features","what":"Automatic rate limiting","title":"Introduction to openaq","text":"resource function provide option enable automatic rate limiting ensure exceed account rate limits. can course implement rate limiting , built-functionality provided easy use option. functionality uses OpenAQ API’s custom rate limit headers httr2::req_retry() function --hood.","code":"list_locations(   limit = 1000,   parameters_id = 2,   providers_id = 166,   rate_limit = TRUE )"},{"path":"https://openaq.github.io/openaq-r/articles/openaq.html","id":"debugging","dir":"Articles","previous_headings":"Features","what":"Debugging","title":"Introduction to openaq","text":"Every resource function provides optional parameter named DRY_RUN prevents full HTTP request API instead prints summary requestion made. can helpful debugging identify issues compare raw query URL headers. functionality uses httr2::req_dry_run() function --hood.","code":"list_locations(   limit = 1000,   parameters_id = 2,   providers_id = 166,   dry_run = TRUE )  #> GET /v3/locations?providers_id=166&parameters_id=10&limit=1000&page=1 HTTP/1.1 #> Host: api.openaq.org #> Accept-Encoding: gzip #> X-API-Key: <REDACTED> #> User-Agent: openaq-r #> Content-Type: application/json #> Accept: application/json"},{"path":"https://openaq.github.io/openaq-r/articles/querying-measurements.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"querying-measurements","text":"vignette demonstrates use openaq R package query air quality measurements OpenAQ API. walk process retrieving list locations, inspecting sensors parameters, finally, fetching plotting actual measurements specific sensor.","code":""},{"path":"https://openaq.github.io/openaq-r/articles/querying-measurements.html","id":"listing-locations","dir":"Articles","previous_headings":"Introduction","what":"Listing Locations","title":"querying-measurements","text":"list_locations() function allows us retrieve information monitoring locations. can filter locations based parameters countries. , searching locations measure PM2.5 (parameter ID 2) Madagascar (country ID 182). default resource functions return data frame set as_data_frame = FALSE receive data list, use easier inspection following steps. locations object list, element represents monitoring location. Let’s examine first location list explore sensors. location contains information sensors. sensor id, name, details measured parameter, including name, units, ID. location also provides timezone local, helpful querying measurements, store later. fetch measurements, need sensor ID. location measures PM2.5 turn one sensor can extract follows:","code":"locations <- list_locations(   parameters_id = 2,   countries_id = 182,   as_data_frame = FALSE ) location <- locations[[1]] sensors <- location$sensors sensors # > [[1]] # > [[1]]$id # > [1] 225221 # > # > [[1]]$name # > [1] \"pm25 µg/m³\" # > # > [[1]]$parameter # > [[1]]$parameter$id # > [1] 2 # > # > [[1]]$parameter$name # > [1] \"pm25\" # > # > [[1]]$parameter$units # > [1] \"µg/m³\" # > # > [[1]]$parameter$displayName # > [1] \"PM2.5\" tz <- location$timezone tz # > [1] \"Indian/Antananarivo\" sensors_id <- sensors[[1]]$id sensors_id # > [1] 225221"},{"path":"https://openaq.github.io/openaq-r/articles/querying-measurements.html","id":"fetching-measurements","dir":"Articles","previous_headings":"","what":"Fetching Measurements","title":"querying-measurements","text":"Now can use list_sensor_measurements() function retrieve measurements sensor. need provide sensors_id, datetime_from, datetime_to arguments. query measurements month January 2025.important use correct timezone dates, use timezone location stored tz variable . limit argument controls maximum number measurements returned single page results. hourly data, querying 31 days measurements, able view results one page (24 hourly measurements * 31 days = 744 measurements). Finally, can visualize measurements using plot() function.","code":"measurements <- list_sensor_measurements(   sensors_id,   datetime_from = as.POSIXct(\"2025-01-01\", tz = tz),   datetime_to = as.POSIXct(\"2025-01-31\", tz = tz),   limit = 1000 ) plot(measurements)"},{"path":"https://openaq.github.io/openaq-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Russ Biggs. Author, maintainer. Christian Parker. Author. OpenAQ. Copyright holder, funder.","code":""},{"path":"https://openaq.github.io/openaq-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Biggs R, Parker C (2025). openaq: OpenAQ API Client. R package version 0.3.0, https://openaq.github.io/openaq-r/, https://github.com/openaq/openaq-r.","code":"@Manual{,   title = {openaq: OpenAQ API Client},   author = {Russ Biggs and Christian Parker},   year = {2025},   note = {R package version 0.3.0, https://openaq.github.io/openaq-r/},   url = {https://github.com/openaq/openaq-r}, }"},{"path":"https://openaq.github.io/openaq-r/index.html","id":"openaq-r-client-","dir":"","previous_headings":"","what":"OpenAQ API Client","title":"OpenAQ API Client","text":"R package interacting OpenAQ API.","code":""},{"path":"https://openaq.github.io/openaq-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"OpenAQ API Client","text":"package available install Github. Use install_github command remotes package.","code":"library(\"remotes\")  install_github(\"openaq/openaq-r@*release\")"},{"path":"https://openaq.github.io/openaq-r/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"OpenAQ API Client","text":"full walkthrough using openaq recommend read “Introduction openaq” vignette (vignette(\"openaq\")). following guide quick minimal example get started. Register account https://explore.openaq.org/register. Find API key user account page. Save API key OPENAQ_API_KEY environment variable . e.g. OPENAQ_API_KEY=yourkey .Renviron. See help(openaq) ways use access API key. Now can query OpenAQ air quality monitoring locations. example query locations measure PM2.5 near (10km) Antananarivo, Madagascar (-18.90848, 47.53751) returns data frame look something like:","code":"library(openaq)  locations <- list_locations(     parameters_id = 2,      coordinates = list(-18.90848, 47.53751),     radius = 10000 )"},{"path":"https://openaq.github.io/openaq-r/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"OpenAQ API Client","text":"Contributions welcome. See contribution guide general information contributing package. Specific guidelines contributions openaq package: Code contributions must follow lint convention using lintr, see .lintr file specifics. Code contributions must include unit test, iether updated wholly new, depending contribution. See testing README information. Limit new dependencies. adding new external dependencies question, seek keep external dependencies minimum. possible use base R functionality. Code contributions rely external dependencies discussed package maintainer first.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_countries_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_countries_list to data frame. — as.data.frame.openaq_countries_list","title":"Method for converting openaq_countries_list to data frame. — as.data.frame.openaq_countries_list","text":"Method converting openaq_countries_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_countries_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_countries_list to data frame. — as.data.frame.openaq_countries_list","text":"","code":"# S3 method for class 'openaq_countries_list' as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_countries_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_countries_list to data frame. — as.data.frame.openaq_countries_list","text":"x list countries returned list_countries row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_countries_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_countries_list to data frame. — as.data.frame.openaq_countries_list","text":"","code":"if (FALSE) { # \\dontrun{ countries <- list_countries() openaq_countries_list.as.data.frame(countries) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_instruments_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_instruments_list","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_instruments_list","text":"Method converting openaq_instruments_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_instruments_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_instruments_list","text":"","code":"# S3 method for class 'openaq_instruments_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_instruments_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_instruments_list","text":"x list countries returned list_instruments. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_instruments_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_instruments_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments(as_data_frame = FALSE) openaq_instruments_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_latest_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_latest_list to data frame. — as.data.frame.openaq_latest_list","title":"Method for converting openaq_latest_list to data frame. — as.data.frame.openaq_latest_list","text":"Method converting openaq_latest_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_latest_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_latest_list to data frame. — as.data.frame.openaq_latest_list","text":"","code":"# S3 method for class 'openaq_latest_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_latest_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_latest_list to data frame. — as.data.frame.openaq_latest_list","text":"x list countries returned list_instruments. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_latest_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_latest_list to data frame. — as.data.frame.openaq_latest_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments(as_data_frame = FALSE) openaq_latest_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_licenses_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_licenses_list","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_licenses_list","text":"Method converting openaq_instruments_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_licenses_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_licenses_list","text":"","code":"# S3 method for class 'openaq_licenses_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_licenses_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_licenses_list","text":"x list countries returned list_instruments. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_licenses_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_instruments_list to data frame. — as.data.frame.openaq_licenses_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments() openaq_instruments_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_locations_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting to data frame — as.data.frame.openaq_locations_list","title":"Method for converting to data frame — as.data.frame.openaq_locations_list","text":"Method converting data frame","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_locations_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting to data frame — as.data.frame.openaq_locations_list","text":"","code":"# S3 method for class 'openaq_locations_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_locations_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting to data frame — as.data.frame.openaq_locations_list","text":"x list locations returned list_locations. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_locations_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting to data frame — as.data.frame.openaq_locations_list","text":"","code":"if (FALSE) { # \\dontrun{ loc <- list_locations() write.csv(loc) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_manufacturers_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_manufacturers_list to data frame. — as.data.frame.openaq_manufacturers_list","title":"Method for converting openaq_manufacturers_list to data frame. — as.data.frame.openaq_manufacturers_list","text":"Method converting openaq_manufacturers_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_manufacturers_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_manufacturers_list to data frame. — as.data.frame.openaq_manufacturers_list","text":"","code":"# S3 method for class 'openaq_manufacturers_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_manufacturers_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_manufacturers_list to data frame. — as.data.frame.openaq_manufacturers_list","text":"x list countries returned list_manufacturers. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_manufacturers_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_manufacturers_list to data frame. — as.data.frame.openaq_manufacturers_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments() openaq_instruments_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_measurements_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_measurements_list to data frame. — as.data.frame.openaq_measurements_list","title":"Method for converting openaq_measurements_list to data frame. — as.data.frame.openaq_measurements_list","text":"Method converting openaq_measurements_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_measurements_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_measurements_list to data frame. — as.data.frame.openaq_measurements_list","text":"","code":"# S3 method for class 'openaq_measurements_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_measurements_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_measurements_list to data frame. — as.data.frame.openaq_measurements_list","text":"x list measurements returned list_sensor_measurements. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_measurements_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_measurements_list to data frame. — as.data.frame.openaq_measurements_list","text":"","code":"if (FALSE) { # \\dontrun{ meas <- list_sensor_measurements(23707, limit = 500, as_data_frame = FALSE) openaq_measurements_list.as.data.frame(meas) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_owners_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_owners_list to data frame. — as.data.frame.openaq_owners_list","title":"Method for converting openaq_owners_list to data frame. — as.data.frame.openaq_owners_list","text":"Method converting openaq_owners_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_owners_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_owners_list to data frame. — as.data.frame.openaq_owners_list","text":"","code":"# S3 method for class 'openaq_owners_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_owners_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_owners_list to data frame. — as.data.frame.openaq_owners_list","text":"x list countries returned list_owners. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_owners_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_owners_list to data frame. — as.data.frame.openaq_owners_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments() openaq_owners_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_parameters_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_parameters_list to data frame. — as.data.frame.openaq_parameters_list","title":"Method for converting openaq_parameters_list to data frame. — as.data.frame.openaq_parameters_list","text":"Method converting openaq_parameters_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_parameters_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_parameters_list to data frame. — as.data.frame.openaq_parameters_list","text":"","code":"# S3 method for class 'openaq_parameters_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_parameters_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_parameters_list to data frame. — as.data.frame.openaq_parameters_list","text":"x list countries returned list_parameters. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_parameters_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_parameters_list to data frame. — as.data.frame.openaq_parameters_list","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments() openaq_parameters_list.as.data.frame(instruments) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_providers_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_providers_list to data frame. — as.data.frame.openaq_providers_list","title":"Method for converting openaq_providers_list to data frame. — as.data.frame.openaq_providers_list","text":"Method converting openaq_providers_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_providers_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_providers_list to data frame. — as.data.frame.openaq_providers_list","text":"","code":"# S3 method for class 'openaq_providers_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_providers_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_providers_list to data frame. — as.data.frame.openaq_providers_list","text":"x list countries returned list_providers. row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_providers_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_providers_list to data frame. — as.data.frame.openaq_providers_list","text":"","code":"if (FALSE) { # \\dontrun{ providers <- list_providers(as_data_frame = FALSE) openaq_instruments_list.as.data.frame(providers) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_sensors_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for converting openaq_sensors_list to data frame. — as.data.frame.openaq_sensors_list","title":"Method for converting openaq_sensors_list to data frame. — as.data.frame.openaq_sensors_list","text":"Method converting openaq_sensors_list data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_sensors_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for converting openaq_sensors_list to data frame. — as.data.frame.openaq_sensors_list","text":"","code":"# S3 method for class 'openaq_sensors_list' as.data.frame(x, row.names=NULL, optional=FALSE, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_sensors_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for converting openaq_sensors_list to data frame. — as.data.frame.openaq_sensors_list","text":"x list sensors returned get_sensor row.names ‘NULL’ character vector giving row names   data frame.  Missing values allowed. optional logical. check names? ... options.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/as.data.frame.openaq_sensors_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for converting openaq_sensors_list to data frame. — as.data.frame.openaq_sensors_list","text":"","code":"if (FALSE) { # \\dontrun{ sensor <- get_sensor(as_frame_frame = FALSE) openaq_sensors_list.as.data.frame(sensor) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/enable_rate_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggles on the RATE_LIMIT environment variable to TRUE. — enable_rate_limit","title":"Toggles on the RATE_LIMIT environment variable to TRUE. — enable_rate_limit","text":"Toggles RATE_LIMIT environment variable TRUE.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/enable_rate_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggles on the RATE_LIMIT environment variable to TRUE. — enable_rate_limit","text":"","code":"enable_rate_limit()"},{"path":"https://openaq.github.io/openaq-r/reference/get_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single country from countries resource. — get_country","title":"Get a single country from countries resource. — get_country","text":"Get single country countries resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single country from countries resource. — get_country","text":"","code":"get_country(   countries_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single country from countries resource. — get_country","text":"countries_id integer representing OpenAQ countries_id. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single country from countries resource. — get_country","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single country from countries resource. — get_country","text":"","code":"if (FALSE) { # \\dontrun{ country <- get_country(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_instrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single instrument from the instruments resource. — get_instrument","title":"Get a single instrument from the instruments resource. — get_instrument","text":"Get single instrument instruments resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_instrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single instrument from the instruments resource. — get_instrument","text":"","code":"get_instrument(   instruments_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_instrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single instrument from the instruments resource. — get_instrument","text":"instruments_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_instrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single instrument from the instruments resource. — get_instrument","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_instrument.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single instrument from the instruments resource. — get_instrument","text":"","code":"if (FALSE) { # \\dontrun{ instrument <- get_instrument(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_license.html","id":null,"dir":"Reference","previous_headings":"","what":"get a single license from the licenses resource. — get_license","title":"get a single license from the licenses resource. — get_license","text":"get single license licenses resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get a single license from the licenses resource. — get_license","text":"","code":"get_license(   licenses_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_license.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get a single license from the licenses resource. — get_license","text":"licenses_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_license.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get a single license from the licenses resource. — get_license","text":"data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_license.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get a single license from the licenses resource. — get_license","text":"","code":"if (FALSE) { # \\dontrun{ license <- get_license(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single location from the locations resource. — get_location","title":"Get a single location from the locations resource. — get_location","text":"Get single location locations resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single location from the locations resource. — get_location","text":"","code":"get_location(   locations_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single location from the locations resource. — get_location","text":"locations_id integer representing locations_id request. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single location from the locations resource. — get_location","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single location from the locations resource. — get_location","text":"","code":"if (FALSE) { # \\dontrun{ location <- get_location(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_location_sensors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a location's sensors. — get_location_sensors","title":"Get a location's sensors. — get_location_sensors","text":"Get location's sensors.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location_sensors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a location's sensors. — get_location_sensors","text":"","code":"get_location_sensors(   locations_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_location_sensors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a location's sensors. — get_location_sensors","text":"locations_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location_sensors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a location's sensors. — get_location_sensors","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_location_sensors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a location's sensors. — get_location_sensors","text":"","code":"if (FALSE) { # \\dontrun{ sensors <- get_location_sensors(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_manufacturer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","title":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","text":"Get single manufacturer manufacturers resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_manufacturer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","text":"","code":"get_manufacturer(   manufacturers_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_manufacturer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","text":"manufacturers_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_manufacturer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_manufacturer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single manufacturer from the manufacturers resource. — get_manufacturer","text":"","code":"if (FALSE) { # \\dontrun{ manufacturer <- get_manufacturer(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_owner.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single owner from owners resource. — get_owner","title":"Get a single owner from owners resource. — get_owner","text":"Get single owner owners resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_owner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single owner from owners resource. — get_owner","text":"","code":"get_owner(   owners_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_owner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single owner from owners resource. — get_owner","text":"owners_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_owner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single owner from owners resource. — get_owner","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_owner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single owner from owners resource. — get_owner","text":"","code":"if (FALSE) { # \\dontrun{ owners <- get_owner(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single parameter from the parameters resource. — get_parameter","title":"Get a single parameter from the parameters resource. — get_parameter","text":"Get single parameter parameters resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single parameter from the parameters resource. — get_parameter","text":"","code":"get_parameter(   parameters_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single parameter from the parameters resource. — get_parameter","text":"parameters_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single parameter from the parameters resource. — get_parameter","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single parameter from the parameters resource. — get_parameter","text":"","code":"if (FALSE) { # \\dontrun{ parameter <- get_parameter(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single provider from providers resource. — get_provider","title":"Get a single provider from providers resource. — get_provider","text":"Get single provider providers resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single provider from providers resource. — get_provider","text":"","code":"get_provider(   providers_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single provider from providers resource. — get_provider","text":"providers_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single provider from providers resource. — get_provider","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single provider from providers resource. — get_provider","text":"","code":"if (FALSE) { # \\dontrun{ provider <- get_provider(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/get_sensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single sensor from sensors resource. — get_sensor","title":"Get a single sensor from sensors resource. — get_sensor","text":"Get single sensor sensors resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_sensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single sensor from sensors resource. — get_sensor","text":"","code":"get_sensor(   sensors_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/get_sensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single sensor from sensors resource. — get_sensor","text":"sensors_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_sensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single sensor from sensors resource. — get_sensor","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/get_sensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single sensor from sensors resource. — get_sensor","text":"","code":"if (FALSE) { # \\dontrun{ sensor <- get_sensor(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of countries from the countries resource. — list_countries","title":"Get a list of countries from the countries resource. — list_countries","text":"Get list countries countries resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of countries from the countries resource. — list_countries","text":"","code":"list_countries(   providers_id = NULL,   parameters_id = NULL,   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_countries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of countries from the countries resource. — list_countries","text":"providers_id numeric vector length 1 , containing ID(s) providers use filtering results. multiple IDs provided, results matching IDs returned. parameters_id numeric vector length 1 , containing ID(s) parameters use filtering results. multiple IDs provided, results matching IDs returned. order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of countries from the countries resource. — list_countries","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of countries from the countries resource. — list_countries","text":"","code":"if (FALSE) { # \\dontrun{ countries <- list_countries() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_instruments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of instruments from the instruments resource. — list_instruments","title":"Get a list of instruments from the instruments resource. — list_instruments","text":"Get list instruments instruments resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_instruments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of instruments from the instruments resource. — list_instruments","text":"","code":"list_instruments(   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_instruments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of instruments from the instruments resource. — list_instruments","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_instruments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of instruments from the instruments resource. — list_instruments","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_instruments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of instruments from the instruments resource. — list_instruments","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_instruments() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_licenses.html","id":null,"dir":"Reference","previous_headings":"","what":"get a list of licenses from the licenses resource. — list_licenses","title":"get a list of licenses from the licenses resource. — list_licenses","text":"get list licenses licenses resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_licenses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get a list of licenses from the licenses resource. — list_licenses","text":"","code":"list_licenses(   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_licenses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get a list of licenses from the licenses resource. — list_licenses","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_licenses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get a list of licenses from the licenses resource. — list_licenses","text":"data frame.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_licenses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get a list of licenses from the licenses resource. — list_licenses","text":"","code":"if (FALSE) { # \\dontrun{ licenses <- list_licenses() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_location_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest measurements by locations_id. — list_location_latest","title":"Get the latest measurements by locations_id. — list_location_latest","text":"Get latest measurements locations_id.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest measurements by locations_id. — list_location_latest","text":"","code":"list_location_latest(   locations_id,   datetime_min = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_location_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest measurements by locations_id. — list_location_latest","text":"locations_id integer. datetime_min string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest measurements by locations_id. — list_location_latest","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_latest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the latest measurements by locations_id. — list_location_latest","text":"","code":"if (FALSE) { # \\dontrun{ measurements <- list_location_latest(2178) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_location_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of measurements by locations_id. — list_location_measurements","title":"Get a list of measurements by locations_id. — list_location_measurements","text":"Get list measurements locations_id.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of measurements by locations_id. — list_location_measurements","text":"","code":"list_location_measurements(   locations_id,   parameters_ids = NULL,   data = \"measurements\",   rollup = NULL,   datetime_from = NULL,   datetime_to = NULL,   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_location_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of measurements by locations_id. — list_location_measurements","text":"locations_id integer representing OpenAQ locations_id parameters_ids numeric vector length 1 , containing ID(s) parameter(s) use filtering results. multiple IDs provided, results matching IDs returned. data string data interval return, defaults \"measurements\". rollup string. datetime_from POSIXct datetime filter measurements datetime_to POSIXct datetime filter measurements order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of measurements by locations_id. — list_location_measurements","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_location_measurements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of measurements by locations_id. — list_location_measurements","text":"","code":"if (FALSE) { # \\dontrun{ measurements <- list_sensor_measurements(3920, \"hours\") } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of locations from the locations resource. — list_locations","title":"Get a list of locations from the locations resource. — list_locations","text":"Get list locations locations resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of locations from the locations resource. — list_locations","text":"","code":"list_locations(   bbox = NULL,   coordinates = NULL,   radius = NULL,   providers_id = NULL,   parameters_id = NULL,   owner_contacts_id = NULL,   manufacturers_id = NULL,   licenses_id = NULL,   monitor = NULL,   mobile = NULL,   instruments_id = NULL,   iso = NULL,   countries_id = NULL,   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of locations from the locations resource. — list_locations","text":"bbox Named numeric vector four coordinates form X minimum, Y mininum, X maximum, Y maximum, named values must xmin, ymin, ymax , xmax. Defaults NULL. coordinates Named numeric vector two numeric WGS84 (EPSG:4326) geographic coordinates, named values latitude longitude. Represents central point used conjunction radius parameter geographic search. Defaults NULL. radius integer number meters search around coordinates parameter filtering locations within radius. Defaults NULL. providers_id numeric vector length 1 , containing ID(s) provider(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. parameters_id numeric vector length 1 , containing ID(s) parameter(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. owner_contacts_id numeric vector length 1 , containing ID(s) owners(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. manufacturers_id numeric vector length 1 , containing ID(s) manufacturers(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. licenses_id numeric vector length 1 , containing ID(s) license(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. monitor logical filter results regulatory monitors (TRUE) air sensors (FALSE), included NULL. Defaults NULL. mobile logical filter results mobile (TRUE) stationary (FALSE) location, included NULL. Defaults NULL. instruments_id numeric vector length 1 , containing ID(s) instrument(s) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. iso ISO 3166-1 alpha-2 string country filter results. countries_id numeric vector length 1 , containing ID(s) country(ies) use filtering results. multiple IDs provided, results matching IDs returned. Defaults NULL. order_by string. Defaults NULL. sort_order string. Defaults NULL. limit integer limit number results per page. Defaults NULL. page integer page number paginating results. Defaults NULL. as_data_frame logical toggling whether return results data frame list. Defaults TRUE dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers. Defaults FALSE. api_key valid OpenAQ API key string. Defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of locations from the locations resource. — list_locations","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of locations from the locations resource. — list_locations","text":"","code":"if (FALSE) { # \\dontrun{ locations <- list_locations() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturer_instruments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","title":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","text":"Get list manufacturer instruments instruments resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturer_instruments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","text":"","code":"list_manufacturer_instruments(   manufacturers_id,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturer_instruments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","text":"manufacturers_id integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturer_instruments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturer_instruments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of manufacturer instruments from the instruments resource. — list_manufacturer_instruments","text":"","code":"if (FALSE) { # \\dontrun{ instruments <- list_manufacturer_instruments(42) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","title":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","text":"Get list manufacturers manufacturers resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","text":"","code":"list_manufacturers(   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_manufacturers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of manufacturers from the manufacturers resource. — list_manufacturers","text":"","code":"if (FALSE) { # \\dontrun{ manufacturers <- list_manufacturers() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_owners.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of owners from the owners resource. — list_owners","title":"Get a list of owners from the owners resource. — list_owners","text":"Get list owners owners resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_owners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of owners from the owners resource. — list_owners","text":"","code":"list_owners(   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_owners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of owners from the owners resource. — list_owners","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_owners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of owners from the owners resource. — list_owners","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_owners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of owners from the owners resource. — list_owners","text":"","code":"if (FALSE) { # \\dontrun{ owners <- list_owners() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_parameter_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest measurements by parameters_id. — list_parameter_latest","title":"Get the latest measurements by parameters_id. — list_parameter_latest","text":"Get latest measurements parameters_id.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameter_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest measurements by parameters_id. — list_parameter_latest","text":"","code":"list_parameter_latest(   parameters_id,   datetime_min = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_parameter_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest measurements by parameters_id. — list_parameter_latest","text":"parameters_id integer. datetime_min string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameter_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest measurements by parameters_id. — list_parameter_latest","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameter_latest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the latest measurements by parameters_id. — list_parameter_latest","text":"","code":"if (FALSE) { # \\dontrun{ measurements <- list_parameter_latest(2) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of parameters from the parameters resource. — list_parameters","title":"Get a list of parameters from the parameters resource. — list_parameters","text":"Get list parameters parameters resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of parameters from the parameters resource. — list_parameters","text":"","code":"list_parameters(   order_by = NULL,   sort_order = NULL,   limit = 100,   page = 1,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of parameters from the parameters resource. — list_parameters","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of parameters from the parameters resource. — list_parameters","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of parameters from the parameters resource. — list_parameters","text":"","code":"if (FALSE) { # \\dontrun{ parameters <- list_parameters() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_providers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of providers from the providers resource. — list_providers","title":"Get a list of providers from the providers resource. — list_providers","text":"Get list providers providers resource.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_providers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of providers from the providers resource. — list_providers","text":"","code":"list_providers(   order_by = NULL,   sort_order = NULL,   limit = 100,   page = 1,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_providers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of providers from the providers resource. — list_providers","text":"order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_providers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of providers from the providers resource. — list_providers","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_providers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of providers from the providers resource. — list_providers","text":"","code":"if (FALSE) { # \\dontrun{ providers <- list_providers() } # }"},{"path":"https://openaq.github.io/openaq-r/reference/list_sensor_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of measurements by sensors_id. — list_sensor_measurements","title":"Get a list of measurements by sensors_id. — list_sensor_measurements","text":"Get list measurements sensors_id.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_sensor_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of measurements by sensors_id. — list_sensor_measurements","text":"","code":"list_sensor_measurements(   sensors_id,   data = \"measurements\",   rollup = NULL,   datetime_from = NULL,   datetime_to = NULL,   order_by = NULL,   sort_order = NULL,   limit = NULL,   page = NULL,   as_data_frame = TRUE,   dry_run = FALSE,   rate_limit = FALSE,   api_key = NULL )"},{"path":"https://openaq.github.io/openaq-r/reference/list_sensor_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of measurements by sensors_id. — list_sensor_measurements","text":"sensors_id integer representing OpenAQ sensors_id. data string data interval return, defaults \"measurements\". rollup string. datetime_from POSIXct datetime filter measurements datetime_to POSIXct datetime filter measurements order_by string. sort_order string. limit integer. page integer. as_data_frame logical toggling whether return results data frame list defaults TRUE. dry_run logical toggling dry run request, defaults FALSE. rate_limit logical toggling automatic rate limiting based rate limit headers, defaults FALSE. api_key valid OpenAQ API key string, defaults NULL.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_sensor_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of measurements by sensors_id. — list_sensor_measurements","text":"data frame list results.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/list_sensor_measurements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of measurements by sensors_id. — list_sensor_measurements","text":"","code":"if (FALSE) { # \\dontrun{ measurements <- list_sensor_measurements(3920, \"hours\") } # }"},{"path":"https://openaq.github.io/openaq-r/reference/openaq-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openaq: OpenAQ API Client — openaq-package","title":"openaq: OpenAQ API Client — openaq-package","text":"R package interacting OpenAQ API https://openaq.org/.","code":""},{"path":[]},{"path":"https://openaq.github.io/openaq-r/reference/openaq-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openaq: OpenAQ API Client — openaq-package","text":"Maintainer: Russ Biggs russ@openaq.org Authors: Christian Parker chris@talloaks.io contributors: OpenAQ dev@openaq.org [copyright holder, funder]","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for plotting locations on map. — plot.openaq_locations_data.frame","title":"Helper for plotting locations on map. — plot.openaq_locations_data.frame","text":"Helper plotting locations map.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for plotting locations on map. — plot.openaq_locations_data.frame","text":"","code":"# S3 method for class 'openaq_locations_data.frame' plot(x, y, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for plotting locations on map. — plot.openaq_locations_data.frame","text":"x data frame locations results. y Placeholder ... options passed base::plot().","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for plotting locations on map. — plot.openaq_locations_data.frame","text":"","code":"if (FALSE) { # \\dontrun{ df <- list_locations(limit = 100) plot(df, pch = 19, col = df$provider) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for plotting locations from list. — plot.openaq_locations_list","title":"Helper for plotting locations from list. — plot.openaq_locations_list","text":"Helper plotting locations list.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for plotting locations from list. — plot.openaq_locations_list","text":"","code":"# S3 method for class 'openaq_locations_list' plot(x, y, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for plotting locations from list. — plot.openaq_locations_list","text":"x list locations results. y Placeholder ... options passed base::plot().","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_locations_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for plotting locations from list. — plot.openaq_locations_list","text":"","code":"if (FALSE) { # \\dontrun{ loc <- list_locations(limit = 6, as_data_frame = FALSE) plot(loc, pch = 19, col = 2) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for plotting measurements — plot.openaq_measurements_data.frame","title":"Helper for plotting measurements — plot.openaq_measurements_data.frame","text":"Helper plotting measurements","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for plotting measurements — plot.openaq_measurements_data.frame","text":"","code":"# S3 method for class 'openaq_measurements_data.frame' plot(x, y, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for plotting measurements — plot.openaq_measurements_data.frame","text":"x data frame measurements results. y Placeholder ... options passed base::plot().","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for plotting measurements — plot.openaq_measurements_data.frame","text":"","code":"if (FALSE) { # \\dontrun{ meas <- list_sensor_measurements(23707, limit = 500, as_data_frame = FALSE) plot(meas) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for plotting measurements from list — plot.openaq_measurements_list","title":"Helper for plotting measurements from list — plot.openaq_measurements_list","text":"Helper plotting measurements list","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for plotting measurements from list — plot.openaq_measurements_list","text":"","code":"# S3 method for class 'openaq_measurements_list' plot(x, y, ...)"},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for plotting measurements from list — plot.openaq_measurements_list","text":"x list measurements results. y Placeholder ... options passed base::plot().","code":""},{"path":"https://openaq.github.io/openaq-r/reference/plot.openaq_measurements_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for plotting measurements from list — plot.openaq_measurements_list","text":"","code":"if (FALSE) { # \\dontrun{ meas <- list_sensor_measurements(23707, limit = 500, as_data_frame = FALSE) plot(meas) } # }"},{"path":"https://openaq.github.io/openaq-r/reference/set_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the API key value. — set_api_key","title":"Set the API key value. — set_api_key","text":"helper function set OPENAQ_API_KEY environment variable.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/set_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the API key value. — set_api_key","text":"","code":"set_api_key(api_key)"},{"path":"https://openaq.github.io/openaq-r/reference/set_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the API key value. — set_api_key","text":"api_key string value API key set.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/set_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the API key value. — set_api_key","text":"","code":"set_api_key(\"my-super-secret-openaq-api-key-1234\")"},{"path":"https://openaq.github.io/openaq-r/reference/set_base_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets base URL environment variable — set_base_url","title":"Sets base URL environment variable — set_base_url","text":"helper function set OPENAQR_BASE_URL environment variable. override default URL testing custom instance API. function generally used users except extraordinary cases.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/set_base_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets base URL environment variable — set_base_url","text":"","code":"set_base_url(base_url)"},{"path":"https://openaq.github.io/openaq-r/reference/set_base_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets base URL environment variable — set_base_url","text":"base_url string.","code":""},{"path":"https://openaq.github.io/openaq-r/reference/set_base_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets base URL environment variable — set_base_url","text":"","code":"set_base_url(\"https://example.com\")"}]
